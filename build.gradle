plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group = project.group
version = "${project.version}.${System.getenv("BUILD_NUMBER") ?: 9999}"

repositories {
    mavenCentral()
    mavenLocal()
    google()
    maven {
        url = uri("https://maven.pkg.github.com/Hunter19823/kubejsoffline-core")
    }
}

dependencies {
    // Log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: project.log4j_version
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: project.log4j_version
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: project.log4j_version

    // GSON
    implementation group: 'com.google.code.gson', name: 'gson', version: project.gson_version

    // Reflections
    implementation group: 'org.reflections', name: 'reflections', version: project.reflections_version

    // JUnit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: project.junit_version
}

test {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs << '-parameters'
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Hunter19823/kubejsoffline-core")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        publishToMavenLocal(MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}